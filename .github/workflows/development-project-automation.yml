name: Development project automations
on:
  workflow_call:
    inputs:
      resource-node-id:
        required: true
        description: The node id of the issue or PR to act upon
        type: string
      event-action:
        required: true
        description: The event action that triggered the original workflow
        type: string
      event-name:
        required: true
        description: The name of the event that triggered the original workflow
        type: string
        default: EventStore
    secrets:
      token:
        required: true
        description: The token to use. It must have org:write access
      project-number:
        required: true
        description: The project number from the project's url

env:
  PROJECT_ID: ${{ secrets.project-number }}
jobs:
  milestone_added_to_issue:
    name: milestone_added_to_issue
    runs-on: ubuntu-latest
    if: inputs.event-name == 'issues' && inputs.event-action == 'milestoned'
    steps:
      - name: 'Add issue to board'
        uses: leonsteinhaeuser/project-beta-automations@v1.0.2
        with:
          gh_token: ${{ secrets.token }}
          organization: EventStore
          project_id: ${{ env.PROJECT_ID }}
          resource_node_id: ${{ inputs.resource-node-id }}
          status_value: '' # No target status means that it gets added in the default state
  get_pr_status:
    name: get_pr_status
    runs-on: ubuntu-latest
    if: inputs.event-name == 'pull_request' && (
      inputs.event-action == 'opened' || inputs.event-action == 'reopened' ||
      inputs.event-action == 'converted_to_draft' || inputs.event-action == 'ready_for_review')
    steps:
      - name: "Get PR information"
        id: get_pr_info
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          gh api graphql -f query='
            query($resource: ID!) {
              node(id: $resource) {
                ... on PullRequest {
                  isDraft
                }
              }
            }' -f resource=${{ inputs.resource-node-id }} > pr_data.json

            if $(jq '.data.node.isDraft' pr_data.json) ; then
              echo "::set-output name=prStatus::In Progress"
            else
              echo "::set-output name=prStatus::Review/QA"
            fi
      - name: "Add Pull Request"
        uses: leonsteinhaeuser/project-beta-automations@v1.0.2
        with:
          gh_token: ${{ secrets.token }}
          organization: EventStore
          project_id: ${{ env.PROJECT_ID }}
          resource_node_id: ${{ inputs.resource-node-id }}
          status_value: ${{ steps.get_pr_info.outputs.prStatus }}
